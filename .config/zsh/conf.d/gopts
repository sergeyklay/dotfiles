# The file containing the default shell options for all shells
#
# The main purpose of this file is to set options that influence the
# shell's behaviour in scripts.

# If a word begins with an unquoted '=' and the EQUALS option is
# set, the remainder of the word is taken as the name of a command.
#
#   $ (setopt equals; echo =make)
#   /usr/bin/make
#
#   $ (setopt noequals; echo =make)
#   =make
#
# For more see: man zshexpn(1)
setopt equals

# Allows '>' redirection to truncate existing files.
# For more see: man zshoptions(1)
setopt clobber

# This will enable a separated context for options in functions.
#
#   $ setopt localoptions
#   $ function t { setopt noequals; }
#   $ t
#   $ setopt | grep noequals | wc -l
#   0
#
#   $ setopt nolocaloptions
#   $ function t { setopt noequals; }
#   $ t
#   $ setopt | grep noequals | wc -l
#   1
#
# For more see: man zshoptions(1)
setopt local_options

# Resolve the path to the physical directory when changing to a
# directory containing a path segment '..'.
#
#   $ setopt no_chase_dots
#   $ mkdir -p /tmp/foo/bar && ln -s /tmp/foo /tmp/alt
#   $ cd /tmp/alt/bar/..
#   $ pwd
#   /tmp/alt
#
#   $ setopt chase_dots
#   $ mkdir -p /tmp/foo/bar && ln -s /tmp/foo /tmp/alt
#   $ cd /tmp/alt/bar/..
#   $ pwd
#   /tmp/foo
#
# For more see: man zshoptions(1)
setopt chase_dots

# Resolve symbolic links to their true values when changing
# directory.
#
#   $ setopt no_chase_links
#   $ mkdir -p /tmp/foo/bar && ln -s /tmp/foo /tmp/alt
#   $ cd /tmp/alt/bar
#   $ pwd
#   /tmp/alt/bar
#
#   $ setopt chase_links
#   $ mkdir -p /tmp/foo/bar && ln -s /tmp/foo /tmp/alt
#   $ cd /tmp/alt/bar
#   $ pwd
#   /tmp/foo/bar
#
# For more see: man zshoptions(1)
setopt no_chase_links

# Do not warn if there a glob with no matches.
#
#   $ setopt nomatch
#   $ ls *bar
#   zsh: no matches found: *bar
#
#   $ setopt no_nomatch
#   $ ls *bar
#   ls: cannot access '*bar': No such file or directory
#
# For more see: man zshoptions(1)
setopt no_nomatch

# Do not send the HUP signal to running jobs when the shell exits.
# For more see: man zshoptions(1).
setopt no_hup

# Split white space separated strings into arrays. The splitting
# is done by default, in most other shells but in zsh it should be
# disabled (by default).  In fact this is the only way for zsh to
# convert a list of words into an array.  I disable this by default
# an will enable in functions thanks to `local_optoins'.
#
#   $ touch a b c
#   $ files="a b c"
#   $ setopt sh_word_split
#   $ ls $files
#   a  b  c
#
#   $ touch a b c
#   $ files="a b c"
#   $ setopt no_sh_word_split
#   $ ls $files
#   ls: cannot access 'a b c': No such file or directory
#
# For more see: man zshoptions(1).
setopt no_sh_word_split

# Allow comments even in interactive shells.
# For more see: man zshoptions(1)
setopt interactive_comments
