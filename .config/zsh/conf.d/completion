# Settings for completion and correction.
#
# This file is sourced on interactive invocations of zsh.
#   .zshenv -> .zprofile -> .zshrc -> [completion] -> .zlogin

# Completion support.
#
# For more see: man zshcompsys(1)

# No duplicate entries are needed.
typeset -U fpath

# Remove previously set not found paths
for ((i = 1; i <= $#fpath; i++)) {
  [ ! -d $fpath[i] ] && fpath[i]=()
}

# Enable completion related modules.  For more see zshmodules(1).

# The compctl builtin for controlling completion.
zmodload -i zsh/compctl

# The basic completion code.
zmodload -i zsh/complete

# Completion listing extensions.
zmodload -i zsh/complist

# Utility builtins for shell function based completion.
zmodload -i zsh/computil

autoload -Uz compinit

# OS specific competion. Should be before calling compinit.
[ -r $ZSHDDIR/conf.d/OS/$OSSHORT/completion ] && {
  source $ZSHDDIR/conf.d/OS/$OSSHORT/completion
}

# To speed up the running of `compinit', it can be made to produce a
# dumped configuration that will be read in on future invocations;
# this is useful for users that have large numbers of completion
# functions and/or large numbers of aliases.
#
# Explicit file name can be given by `compinit -d dumpfile'. The next
# invocation of compinit will read the dumped file instead of
# performing a full initialization.
#
# On slow systems, checking the cached dumped configuration file to
# see if it must be regenerated adds a noticable delay to zsh startup.
# Bellow little hack restricts it to once a day.
#
# The globbing is a little complicated here:
# - '#q'    is an explicit glob qualifier that makes globbing work
#           within zsh's [[ ]] construct.
# - 'N'     makes the glob pattern evaluate to nothing when it
#           doesn't match (rather than throw a globbing error)
# - '.'     matches "regular files"
# - 'mh+24' matches files (or directories or whatever) that are
#           older than 24 hours.
ZSH_COMPDUMP=$ZSHCACHEDIR/zcompdump
if [[ -n $ZSH_COMPDUMP(#qN.mh+24) ]]
then
  compinit -d $ZSH_COMPDUMP
else
  # ignore checking cached dumped configuration at all
  compinit -C
fi

# Various options for completion and correction.

setopt correct         # correct mistyped commands
setopt nocorrectall    # do not correct the rest
setopt automenu        # instantly display the menu, then cycle through
setopt list_ambiguous  # complete only up to ambiguity
setopt autolist        # automatically show lists in case of ambiguities
setopt listtypes       # show @,/ and so on for completion candidates
LISTMAX=50             # ask for seeing all completion candidates if the
                       # list would take more than 50 entries
setopt hash_list_all   # hash command path before completion
setopt completeinword  # complete not just at word end
setopt noglobdots      # never match dotfiles with *
setopt completealiases # complete aliases, too
setopt extended_glob   # advanced completion and globbing

# Ztyle pattern
# :completion:<function>:<completer>:<command>:<argument>:<tag>

# Show a menu for >= 10 entries.
zstyle ':completion:*' menu select=10

# Use the cache,
zstyle ':completion:*' use-cache on

# completion cache directory.
zstyle ':completion:*' cache-path $ZSHCACHEDIR/zcompcache

# Ignore unknown cmnds.
zstyle ':completion:*:functions' ignored-patterns '_*'

# Ignore . when cd ../
zstyle ':completion:*:cd:*' ignore-parents parent pwd

# PATH completion support for sudo
zstyle ':completion:*:sudo:*' environ PATH="$SUDO_PATH:$PATH"

# Nicer display.
zstyle ':completion:*:descriptions' format '%U%B%d%b%u'
zstyle ':completion:*:warnings' \
       format '%BSorry, no matches for: %d%b'

# Fuzzy matching for mistyped stuff with increasing ‘tolerance’ for
# increased length of typed string.
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle -e ':completion:*:approximate:*' \
       max-errors 'reply=($((($#PREFIX+$#SUFFIX)/3))numeric)'

# Colors support.
if [ -z "$LS_COLORS" ]; then
  zstyle ':completion:*:default' list-colors '' # colorized
else
  zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
fi
