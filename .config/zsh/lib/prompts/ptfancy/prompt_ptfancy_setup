# ptfancy prompt theme
#
# Copyright (c) 2020, Serghei Iakovlev
#
# This theme relies on the folowing Zsh options:
#   - prompt_subst (see: conf.d/prompt)
#   - local_options (see: conf.d/gopts)
#
# As well as on the following functions:
#   - add-zsh-hook (see: conf.d/defuns)
#
# This file is autoloaded as a function in the current shell
# context.  For more info see zshcontrib(1).

prompt_ptfancy_help () {
  cat <<'ENDHELP'
This prompt is color-scheme-able.  With this prompt theme, the
prompt contains the current username and hostname, the current
working directory, the previous command's exit code (if non-zero),
the flag “[SSH]” (if there is a SSH connection), and information
about Git/SVN repository status (when inside a VCS repository).

You can invoke it thus:

  prompt ptfancy [<color1> [<color2> [<color3> [<color4>]]]]

where the colors are for the user@host foreground, exit status,
current working directory, and VCS branch respectively.  The default
colors are cyan, red, blue, and yellow.  To specify colours, use
English words like “magenta”.

This theme is designed for dark backgrounds, but should work with
light backgrounds too.  Recommended fonts for this theme are: Roboto
Mono, DejaVu Sans Mono, Fira Code, Source Code Pro, Hack, Consolas
or similar.

This theme relies on `localoptions' and `promptsubst' options.  Thus
these options should be set before.  For more see zshoptions(1).  To
modify `precmd' and `preexec' the availability of `add-zsh-hook' is
required.  For more see zshcontrib(1).
ENDHELP
}

prompt_ptfancy_setup () {
  # Default color scheme.
  typeset -ga prompt_ptfancy_colors
  prompt_ptfancy_colors=(
    ${1:-'cyan'}
    ${2:-'red'}
    ${3:-'blue'}
    ${4:-'yellow'}
  )

  # Execute `prompt_ptfancy_precmd' before each prompt.  This will
  # add `prompt_ptfancy_precmd' to $precmd_functions global array.
  # For more see zshcontrib(1).
  add-zsh-hook precmd prompt_ptfancy_precmd
}

# Used prompt escapes are:
#
# %?   - Exit status
# %B   - Start boldface mode
# %F   - Start using a different foreground color
# %f   - Stop using a different foreground color
# %m   - The hostname up to first ‘.’
# %n   - The username
# %~   - Current working directory
prompt_ptfancy_render () {
  # This is a workaround because after first `local' decalration
  # exit status will reset to zero.
  local p_rc=$(print -P '%(?..%F{$prompt_ptfancy_colors[3]}[%F{$prompt_ptfancy_colors[2]}%?%F{$prompt_ptfancy_colors[3]}]%f )')

  local -a pcc
  local -A pc

  # Default colour scheme.
  pcc[1]=$prompt_ptfancy_colors[1]
  pcc[2]=$prompt_ptfancy_colors[2]
  pcc[3]=$prompt_ptfancy_colors[3]
  pcc[4]=$prompt_ptfancy_colors[4]

  pc['lsb']="%F{$pcc[3]}[%f" # ‘[’
  pc['rsb']="%F{$pcc[3]}]%f" # ‘]’

  local prompt
  local p_ssh

  local p_userhost='%B%F{$pcc[1]}%(!.%m.%n@%m)%f '

  local p_userhost_etc=$(print -P '$p_userhost%(4~|...|)%3~')
  local p_len=${#p_userhost_etc}

  # Current working path.
  local p_userpwd

  if [[ $p_len -lt 40 ]]; then
    p_userpwd='%F{$pcc[3]}%(4~|...|)%3~%F{default}'
  else
    local zero='%([BSUbfksu]|[FBK]{*})'
    local p_userhost_nc='${p_userhost//$~zero/}'
    local p_userhost_enc=$(print -P '$p_userhost_nc')
    local space_left=$(( $COLUMNS - $#p_userhost_enc - 2 ))

    p_userpwd="%F{$pcc[3]}%${space_left}<...<%~%F{default}"
  fi

  # If there is a SSH connection setup colored string using $2 as a
  # color for “SSH” word and $3 as a color for ‘[’ and ‘]’ brackets.
  if [ -n "${SSH_CONNECTION}" ]; then
    p_ssh='%F{$pcc[3]}[%F{$pcc[2]}SSH%F{$pcc[3]}]%f '
  fi

  prompt='$p_userhost$p_rc$p_ssh$p_userpwd'

  print -P $prompt
}

# Used prompt escapes are:
#
# %f   - Stop using a different foreground color
# %b   - Stop boldface mode
# %#   - A ‘#’ if the shell is running with privileges, a ‘%’ if not
prompt_ptfancy_precmd () {
  # Do not print commands and their arguments as they are executed.
  # For more see zshoptions(1).
  setopt no_xtrace

  PS1='$(prompt_ptfancy_render)
%f%b%# '

  # The secondary prompt, printed when the shell needs more
  # information to complete a command.  It is expanded in the same
  # way as PS1.  For more see zshparam(1).
  PS2='%_> '

  # Selection prompt used within a select loop.  It is expanded in
  # the same way as PS1.  For more see zshparam(1).
  PS3='?# '
}

prompt_ptfancy_preview () {
  local -a colors
  colors=(red green blue magenta)

  if (( ! $#* )); then
    prompt_preview_theme \
      ptfancy $colors[1] $colors[2] $colors[3] $colors[4]
  else
    prompt_preview_theme ptfancy "$@"
  fi
}

prompt_ptfancy_setup "$@"

# Local Variables:
# mode: sh
# End:
